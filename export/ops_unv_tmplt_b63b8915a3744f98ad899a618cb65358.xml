<?xml version="1.0" encoding="UTF-8"?><unload unload_date="2020-07-08 15:23:48" unload_format="1" unload_table="ops_unv_tmplt" unload_version="6.8.0.0"><ops_unv_tmplt action="INSERT_OR_UPDATE"><credentials_var/><agent>aa288d4fa10945dd895038893cf96b2d</agent><icon_date_created>2019-12-23 10:59:18</icon_date_created><sys_updated_on>2020-05-12 17:12:22</sys_updated_on><output_return_text/><sys_updated_by>Ravi</sys_updated_by><sys_created_on>2020-01-02 10:33:27</sys_created_on><agent_cluster_var/><agent_cluster_var_check>false</agent_cluster_var_check><wait_for_output>false</wait_for_output><sys_created_by>Ravi</sys_created_by><output_return_nline>100</output_return_nline><exit_code_text/><exit_code_fr>0</exit_code_fr><runtime_dir/><output_return_type>1</output_return_type><script>#!/usr/bin/python3
#/opt/universal/python3.6/bin/python3
# --
#         Origins: Stonebranch
#          Author: Ravi Kumar Murugesan
#            Date: 22-DEC-2019
#
#    Copyright (c) Stonebranch, 2019.  All rights reserved.
#
#         Purpose: Notification to slack channels
#
import requests

version = "0.3"
#           Version History:    0.1     RMU     23-DEC-2019     Initial Version  
#                               0.2     RMU     02-JAN-2020     Adding approval Functionality
#                               0.3     RMU     05-MAY-2020     Adding block_id in the slack message 
# --
    
# -- Main Logic Function
def main():
    ScriptSetup()                                               # -- Import Required Modules, Setup Logging Format, Set Variables 
    print ("Initialization completed")
    if args.UC_slack_function == "Job Notification" :
        logging.info("Prepare message for Notifying Slack Channel")
        Notifyslack()                                                      
    if args.UC_slack_function == "Approval Notification":
        logging.info("Prepare Approval message for sending Slack Channel")
        Approvalnotify()
# --
# -- Import Required Modules, Setup Logging Format, Set Variables 
def ScriptSetup():
    # -- Import required python modules 
    import argparse, logging, sys, uuid, time, datetime, json, re
    # -- Import requests, if error then install requests
    try:
        import requests
    except:
        try:
            from pip import main as pipmain
        except:
            from pip._internal import main as pipmain 
        pipmain(['install','--trusted-host=pypi.python.org','--trusted-host=pypi.org','--trusted-host=files.pythonhosted.org','requests'])
        import requests
    global argparse, logging, sys, requests, uuid, time, datetime, json, re
    # -- Set Variables from Universal Task Form or Command Line Input
    # -- Set Variables from Universal Task Form or Command Line Input
    parser=argparse.ArgumentParser(description='Purpose : Slack Notification Universal Task')
    # ## --&gt; Capture Universal Task Form Variables Here
    parser.add_argument("--UC_Job_Name", default="${ops_slack_jobname}")
    parser.add_argument("--UC_Job_Status", default="${ops_slack_jobstatus}")
    parser.add_argument("--UC_Invoked_By", default="${ops_slack_invoked_by}")
    parser.add_argument("--UC_slack_function", default="${ops_slack_slack_function}")
    parser.add_argument("--UC_description", default="${ops_slack_description}")
    parser.add_argument("--UC_Exec_User", default="${ops_slack_exec_user}")
    parser.add_argument("--Slack_Incoming_webhook", default="${ops_slack_slack_webhook}")
    parser.add_argument("--UC_Job_Type", default="${ops_slack_jobtype}")
    # ## --&gt;
    parser.add_argument("--logginglevel", default="${ops_logic_logginglevel}")
    global args
    args=parser.parse_args()
    # -- Setup Logging
    numeric_level = getattr(logging, args.logginglevel.upper(), None)
    logging.basicConfig(format='%(asctime)-15s - %(levelname)-8s - %(message)s', level=logging.INFO)
    # -- Print Paramater Values
    logging.debug("Executing version {0} with the following parameters : {1}".format(version, args))
    # -- Ignore Https Warnings
    import urllib3
    urllib3.disable_warnings()
    # -- Setup LogDate for Trigger Log Search
    global log_date
    log_date = json.dumps(datetime.datetime.now().isoformat())
    # -- Global Parms
# --
def Notifyslack():
    # Set the webhook_url to the one provided by Slack when you create the webhook at https://my.slack.com/services/new/incoming-webhook/
    logging.info("Format Message for Slack channel")
    webhook_url = args.Slack_Incoming_webhook
    slack_data = {        
        "attachments": [
        {
            "color":"#ff0000",
            "blocks": [
                {
                    "type": "section",
                    "text": {
                        "type": "mrkdwn",
                        "text": "Job Failure Notification"
                            }
                },
                {
                    "type": "section",
                    "fields":[
                        {
                            "type": "mrkdwn",
                            "text": "*Job Name:*\n"+args.UC_Job_Name
                        },
                        {
                            "type": "mrkdwn",
                            "text": "*Job Type:*\n"+args.UC_Job_Type
                        },
                        {
                            "type": "mrkdwn",
                            "text": "*Job Status:*\n"+args.UC_Job_Status
                        },
                        {
                            "type": "mrkdwn",
                            "text": "*Invoked By:*\n"+args.UC_Invoked_By
                        },
                        {
                            "type": "mrkdwn",
                            "text": "*Execution User:*\n"+args.UC_Exec_User    
                        }
			        ]
                }
                ]
            }
        ]
    }
    response = requests.post(
        webhook_url, data=json.dumps(slack_data),headers={'Content-Type': 'application/json'})
    logging.info("Message Posted to Slack Channel")
    if response.status_code != 200:
        raise ValueError(
        'Request to slack returned an error %s, the response is:\n%s'
        % (response.status_code, response.text)
                        )
        logging.info("Notification to slack failed")

def Approvalnotify():

    print("Format approval message to be sent in Slack channel")
    webhook_url = args.Slack_Incoming_webhook
    slack_data = {            
            "blocks": [
                {
                    "block_id":"manual_task_approval",
                    "type": "section",
                    "text": {
                        "type": "mrkdwn",
                        "text": "Approval Notification"
                            }
                },
                {
                    "type": "section",
                    "fields":[
                        {
                            "type": "mrkdwn",
                            "text": "*Job Name:*\n"+args.UC_Job_Name
                        },
                        {
                            "type": "mrkdwn",
                            "text": "*Job Type:*\n"+args.UC_Job_Type
                        },
                        {
                            "type": "mrkdwn",
                            "text": "*Job Status:*\n"+args.UC_Job_Status
                        },
                        {
                            "type": "mrkdwn",
                            "text": "*Invoked By:*\n"+args.UC_Invoked_By
                        },
                        {
                            "type": "mrkdwn",
                            "text": "*Description:*\n"+args.UC_description    
                        }
			        ]
                },
                {
                    "type":"actions",
                    "elements": [
                        {
                            "type": "button",
					        "text": {
                                "type": "plain_text",
                                "text": "Approve"
                                },
                            "style": "primary",
                            "value": "approved_status"
                        },
                        {
				        	"type": "button",
                            "text": {
                                "type": "plain_text",
                                "text": "Deny"
                                },
                            "style": "danger",
                            "value": "denied"
                        }
                    ]
                }
            ]
    }

               
    response = requests.post(
        webhook_url, data=json.dumps(slack_data),headers={'Content-Type': 'application/json'})
    logging.info("Message Posted to Slack Channel")
    if response.status_code != 200:
        raise ValueError(
        'Request to slack returned an error %s, the response is:\n%s'
        % (response.status_code, response.text)
                        )
        logging.info("Notification to slack failed")


# --
# -- Execute
main()</script><broadcast_cluster_var_check>false</broadcast_cluster_var_check><agent_type>1</agent_type><script_type_windows>py</script_type_windows><automatic_output_fr>0</automatic_output_fr><agent_cluster/><name>SLACK-NOTIFY</name><exit_codes>0</exit_codes><broadcast_cluster/><use_common_script>true</use_common_script><credentials>1211ec95ae8442539849496c3e040152</credentials><icon_filesize>3192</icon_filesize><icon>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</icon><credential_fr>0</credential_fr><description>This task will notify slack app for user defined status</description><environment_variables_fr>0</environment_variables_fr><agent_var/><icon_filename>slack.PNG</icon_filename><sys_id>b63b8915a3744f98ad899a618cb65358</sys_id><variable_prefix>slack</variable_prefix><system_template>false</system_template><script_windows/><credentials_var_check>false</credentials_var_check><agent_fr>0</agent_fr><agent_var_check>false</agent_var_check><output_failure_only>false</output_failure_only><output_return_sline>1</output_return_sline><output_type>1</output_type><desktop_interact>false</desktop_interact><script_unix/><output_return_file/><run_as_sudo>false</run_as_sudo><broadcast_cluster_var/><environment/><elevate_user>false</elevate_user><exit_code_output/><exit_code_processing>1</exit_code_processing><create_console>false</create_console><related_items_node><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-01-02 10:48:04</sys_updated_on><boolean_value_type>1</boolean_value_type><required>true</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>0929907933ae4062a27a67254ddd8527</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-01-02 10:33:27</sys_created_on><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>b63b8915a3744f98ad899a618cb65358</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Slack Webhook URL</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>6</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>provide your slack webhook URL</hint><field_mapping>textField3</field_mapping><name>slack_webhook</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-01-02 10:36:38</sys_updated_on><boolean_value_type>1</boolean_value_type><required>true</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>47d6d76218684b60927a41db505444f9</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-01-02 10:33:27</sys_created_on><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>b63b8915a3744f98ad899a618cb65358</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Jobname</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>2</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>indicate the job name to be notified in slack</hint><field_mapping>textField1</field_mapping><name>jobname</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-01-02 10:49:28</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>52dbbd9bd33d49b3b7167667e5b49e91</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-01-02 10:38:36</sys_created_on><field_value/><no_space_if_hidden>true</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>b63b8915a3744f98ad899a618cb65358</universal_template_id><show_if_field>choiceField1</show_if_field><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Job Approval Description</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>3</sequence><show_if_field_value>Approval Notification</show_if_field_value><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>approval Notification description</hint><field_mapping>textField7</field_mapping><name>description</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>2</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-01-02 10:48:04</sys_updated_on><boolean_value_type>1</boolean_value_type><required>true</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>76118db5fc944f84af2b233f907c34f1</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-01-02 10:33:27</sys_created_on><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>b63b8915a3744f98ad899a618cb65358</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Job Status</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>5</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>true</default_list_view><hint>indicate the job status for slack notification</hint><field_mapping>textField2</field_mapping><name>jobstatus</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-01-02 10:48:04</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>8214c76d46734bb8be876134209016c0</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-01-02 10:33:27</sys_created_on><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>b63b8915a3744f98ad899a618cb65358</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Execution User</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>8</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>Provide the Execution user</hint><field_mapping>textField5</field_mapping><name>exec_user</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-01-02 10:48:04</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>8d604e780ee84918b8b96503731af20b</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-01-02 10:33:27</sys_created_on><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>b63b8915a3744f98ad899a618cb65358</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Invoked by</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>7</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>Job invoked by</hint><field_mapping>textField4</field_mapping><name>invoked_by</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-01-02 10:48:04</sys_updated_on><boolean_value_type>1</boolean_value_type><required>true</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>8d90f69cad9544db985dedcc2771835d</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-01-02 10:33:27</sys_created_on><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>b63b8915a3744f98ad899a618cb65358</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Job Type</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>4</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>provide the job type</hint><field_mapping>textField6</field_mapping><name>jobtype</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2020-01-02 10:47:43</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>a442e615d44b4c6aac05db4aaac6ed73</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>Ravi</sys_updated_by><array_value_title/><sys_created_on>2020-01-02 10:34:51</sys_created_on><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>Ravi</sys_created_by><int_field_min/><universal_template_id>b63b8915a3744f98ad899a618cb65358</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Slack Function</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>1</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>select the slack from the list</hint><field_mapping>choiceField1</field_mapping><name>slack_function</name><field_regex/><field_type>4</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>a442e615d44b4c6aac05db4aaac6ed73</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>3628c695bf8a48a78ac48566b24e1631</sys_id><sequence>0</sequence><sys_updated_by>Ravi</sys_updated_by><sys_created_on>2020-01-02 10:36:04</sys_created_on><field_value_label>Job Notification</field_value_label><field_value>Job Notification</field_value><sys_updated_on>2020-01-02 10:36:04</sys_updated_on><sys_created_by>Ravi</sys_created_by><universal_template_id>b63b8915a3744f98ad899a618cb65358</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>a442e615d44b4c6aac05db4aaac6ed73</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>9d24794fb4854d609ceb3c838bda3051</sys_id><sequence>1</sequence><sys_updated_by>Ravi</sys_updated_by><sys_created_on>2020-01-02 10:36:19</sys_created_on><field_value_label>Approval Notification</field_value_label><field_value>Approval Notification</field_value><sys_updated_on>2020-01-02 10:36:19</sys_updated_on><sys_created_by>Ravi</sys_created_by><universal_template_id>b63b8915a3744f98ad899a618cb65358</universal_template_id></ops_unv_tmplt_field_choice></related_items_node></ops_unv_tmplt></unload>